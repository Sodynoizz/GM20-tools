import enum
import discord , json
from discord.ext import commands
import pytz , datetime
from matplotlib import pyplot as plt

class OrderModal(discord.ui.Modal):
    def __init__(self , bot : commands.AutoShardedBot):
        self.bot = bot
        super().__init__(title = "‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
        self.add_item(discord.ui.InputText(label = "‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•) ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" , style = discord.InputTextStyle.short , required = True))
        self.add_item(discord.ui.InputText(label = "‡πÉ‡∏™‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠" , style = discord.InputTextStyle.paragraph , required = True))
        self.add_item(discord.ui.InputText(label = "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ Zenith ‡∏Å‡∏µ‡πà‡πÄ‡∏•‡πà‡∏°" , style = discord.InputTextStyle.short , required = False , value = 0))
        self.add_item(discord.ui.InputText(label = "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏°‡∏û‡∏£‡∏∞‡πÄ‡∏Å‡∏µ‡πâ‡∏¢‡∏ß‡πÄ‡∏ä‡πâ‡∏≤ ‡∏Å‡∏µ‡πà‡πÄ‡∏•‡πà‡∏°" , style = discord.InputTextStyle.short , required = False , value = 0))
        self.add_item(discord.ui.InputText(label = "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏°‡∏û‡∏£‡∏∞‡πÄ‡∏Å‡∏µ‡πâ‡∏¢‡∏ß‡∏ö‡πà‡∏≤‡∏¢ ‡∏Å‡∏µ‡πà‡πÄ‡∏•‡πà‡∏°" , style = discord.InputTextStyle.short , required = False , value = 0))
    async def checkargs(self , interaction : discord.Interaction , value) -> None:
        try:
            if value.isnumeric() is True:
                if "." in value:
                    return await interaction.response.send_message(content = "‚ùå **[Error]** : ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
                return value
        except:
            return await interaction.response.send_message(content = "‚ùå **[Error]** : ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô" , ephemeral = True)

    
    def current(self):
        tz = pytz.timezone('Asia/Bangkok')
        now1 = datetime.datetime.now(tz)
        month_name = 'x Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split()[now1.month]
        thai_year = now1.year + 543
        time_str = now1.strftime('%H:%M:%S')
        return "%d %s %d %s"%(now1.day, month_name, thai_year, time_str) # 30 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2560 20:45:30

    async def callback(self , interaction : discord.Interaction):
        # create dm room
        zenith = await self.checkargs(interaction , self.children[2].value)
        prakeawchaw = await self.checkargs(interaction , self.children[3].value)
        prakeawafternoon = await self.checkargs(interaction , self.children[4].value)
        
        try:
            description = f"```1.‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á : {self.children[0].value}\n2.‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà : {self.children[1].value}\n3.‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ zenith ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î : {zenith} ‡πÄ‡∏•‡πà‡∏°\n4.‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏°‡∏û‡∏£‡∏∞‡πÄ‡∏Å‡∏µ‡πâ‡∏¢‡∏ß‡πÄ‡∏ä‡πâ‡∏≤ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î : {prakeawchaw} ‡πÄ‡∏•‡πà‡∏°\n5. ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏°‡∏û‡∏£‡∏∞‡πÄ‡∏Å‡∏µ‡πâ‡∏¢‡∏ß‡∏ö‡πà‡∏≤‡∏¢ : {prakeawafternoon}```"
            embed = discord.Embed(title = "‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠", description = description , color = discord.Colour.green())
            embed.set_thumbnail(url = interaction.user.avatar.url)
            embed.set_footer(text = f"‡∏™‡∏±‡πà‡∏á‡∏à‡∏≠‡∏á‡πÇ‡∏î‡∏¢ {interaction.user}")
        
            # queue ID system
            index = 0
            with open("database/queue.json", "r") as queue:
                data = json.load(queue)
                index = int(data["queue"]) + 1
                with open("database/queue.json", "w") as writeFile:
                    json.dump({"queue" : index}, writeFile)

            # add to footer embed
            embed.set_footer(text = f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (ID) : {index}" , icon_url = interaction.user.avatar.url)
            
            # add to history
            with open("database/history.txt", "a") as history:
                history.write(f"Order {index}: [{self.current()}]\t({self.children[0].value})\t->\tprakeawchaw : {prakeawchaw} books, prakeawafternoon : {prakeawafternoon} books, zenith : {zenith} books\n")
            
            #? admin room checking
            adminroom = self.bot.get_channel(982491688830369853)
            await adminroom.send(embed = embed)
            
            #? check interaction channel for
            if interaction.channel.id != 982301617959338074:
                await interaction.response.send_message(content = f"‚úÖ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ {interaction.user.mention} ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ zenith ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô `{zenith}` ‡πÄ‡∏•‡πà‡∏° , ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏°‡∏û‡∏£‡∏∞‡πÄ‡∏Å‡∏µ‡πâ‡∏¢‡∏ß‡πÄ‡∏ä‡πâ‡∏≤ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô `{prakeawchaw}` ‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏°‡∏û‡∏£‡∏∞‡πÄ‡∏Å‡∏µ‡πâ‡∏¢‡∏ß‡∏ö‡πà‡∏≤‡∏¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô `{prakeawafternoon}` ‡πÄ‡∏•‡πà‡∏° ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö\n‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà direct message ‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô" , ephemeral = True)
                return await interaction.user.send(embed = embed , content = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ID : `{index}`\n‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ admin ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á <#982313955663937547> ‡πÇ‡∏î‡∏¢‡∏î‡πà‡∏ß‡∏ô\nüìî **Note** : ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å order ‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á <#982313955663937547> ‡∏î‡∏±‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ\n```‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ID : {index}\n‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ : ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á\n‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏ : ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏±‡πà‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£```")
            return await interaction.user.send(embed = embed)
        
        except:
            pass
        
class Order(commands.Cog):
    def __init__(self , bot : commands.AutoShardedBot):
        self.bot = bot
    
    @commands.Cog.listener()
    async def on_ready(self):
        print(self.__class__.__name__)
    
    @discord.commands.slash_command(name = "‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠" , description = "‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≠‡∏°‡∏°‡∏≤‡∏ô‡∏î‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    async def ‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠(self , ctx : discord.ApplicationContext):
        await ctx.response.send_modal(modal = OrderModal(self.bot))
    
    @discord.commands.slash_command(name = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠" , description = "‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≠‡∏°‡∏°‡∏≤‡∏ô‡∏î‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏∑‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    @discord.default_permissions(administrator = True)
    async def ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠(self , ctx : discord.ApplicationContext , 
        order : discord.commands.Option(int , name = "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á" , description = "‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" , required = True)):
        gettext = ""
        with open("database/history.txt","r+") as f:
            new_f = f.readlines()
            f.seek(0)
            for line in new_f:
                if f"Order {order}" not in line:
                    f.write(line)
            f.truncate()
        await ctx.respond(content = f"‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡πÄ‡∏•‡πâ‡∏ß ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ #{order}")

            
def setup(bot : commands.AutoShardedBot):
    bot.add_cog(Order(bot))